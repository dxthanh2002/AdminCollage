@model Admin.Models.AdmissionResponse
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Details";
    var token = HttpContextAccessor.HttpContext.Request.Cookies["token"];
    var expireTime = HttpContextAccessor.HttpContext.Request.Cookies["expireTime"];
}
<head>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <style>
        .modals {
            display:    none;
            position:   fixed;
            z-index:    1000;
            top:        0;
            left:       0;
            height:     100%;
            width:      100%;
            background: rgba( 255, 255, 255, .8 )
            url('https://i.stack.imgur.com/FhHRx.gif')
            50% 50%
            no-repeat;
        }
        body.loading {
            overflow: hidden;
        }
        body.loading .modals {
            display: block;
        }
        
        body {
          background-color: #e1e1e1;
        }
    </style>
</head>
<body>
<div class="col-md-12">
    <div class="card card-primary">
        <div class="card-header">
            <h2 class="card-title">Detail </h2><br>
        </div>
        <div class="card-body">
            <div>
                <h4>Admission</h4>
                <hr/>
                <dl class="row">
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Name)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Name)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Email)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Email)
                    </dd>
                    <dt class="col-sm-2">
                        Father Name
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.FatherName)
                    </dd>
                    <dt class="col-sm-2">
                        Mother Name
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.MotherName)
                    </dd>
                    <dt class="col-sm-2">
                        Date of Birth
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Dob)
                    </dd>
                    <dt class="col-sm-2">
                        Gender
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Gender)
                    </dd>
                    <dt class="col-sm-2">
                        Residential Address
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.ResAddress)
                    </dd>
                    <dt class="col-sm-2">
                        Permanent Address
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.PerAddress)
                    </dd>
                    <dt class="col-sm-2">
                        Admission For
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Department)
                    </dd>
                    <dt class="col-sm-2">
                        University
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.University)
                    </dd>
                    <dt class="col-sm-2">
                        Enrollment Number
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.EnrollmentNumber)
                    </dd>
                    <dt class="col-sm-2">
                        Center
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Center)
                    </dd>
                    <dt class="col-sm-2">
                        Stream
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Stream)
                    </dd>
                    <dt class="col-sm-2">
                        Field
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Field)
                    </dd>
                    <dt class="col-sm-2">
                        Mark Secured
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.MarkSecured)
                    </dd>
                    <dt class="col-sm-2">
                        Out Of
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.OutOf)
                    </dd>
                    <dt class="col-sm-2">
                        Class Obtained
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.ClassObtained)
                    </dd>
                    <dt class="col-sm-2">
                        Sport Detail
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.SportDetail)
                    </dd>
                    <dt class="col-sm-2">
                        Status
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Status)
                    </dd>
                    <dt class="col-sm-2">
                        Created At
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.CreatedAt)
                    </dd>
                    <dt class="col-sm-2">
                        Last Modified At
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.LastModifiedAt)
                    </dd>
                </dl>
            </div>
            <div>
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">Approve</button>
                <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#rejectModal">Reject</button>

                <a asp-action="Index">Back to List</a>
            </div>

            <!-- Approval Modal -->
            <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Approve Admission</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to approve this admission?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                            <button id="approval" type="button" class="btn btn-primary">Yes</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Rejection Modal -->
            <div class="modal fade" id="rejectModal" tabindex="-1" role="dialog" aria-labelledby="rejectModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="rejectModalLabel">Reject Admission</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to reject this admission?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                            <button id="rejection" type="button" class="btn btn-primary">Yes</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.card-body -->
   <div id="spinner" class="modals"><!-- Place at bottom of page --></div>
        
    </div>
    <!-- /.card -->
    
</div>

@section Scripts {
    <script type="text/javascript">
        var id = @Model.Id;
        
        $("#approval").click(function () {
            showSpinner();
            $("#exampleModal").hide();
            $.ajax({
                type: 'PUT',
                url: `http://localhost:5080/api/Admission/${id}/Approved`,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                headers: {
                    Authorization: `Bearer @token`
                },
                success: function (data) {
                    hideSpinner();
                    alert("Admission Approved")
                    window.location.href = "/Admissions/Index";
                },
                error: function (error) {
                    hideSpinner();
                    alert("Something went wrong")
                }
            });
        });

        $("#rejection").click(function () {
            showSpinner();
            $("#rejectModal").hide();
            $.ajax({
                type: "PUT",
                url: `http://localhost:5080/api/Admission/${id}/Rejected`,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                headers: {
                    Authorization: `Bearer @token`
                },
                success: function (data) {
                    hideSpinner();
                    alert("Admission Rejected")
                    window.location.href = "/Admissions/Index";
                },
                error: function (error) {
                    hideSpinner();
                    alert("Something went wrong")
                }
            });
        });
        
        function showSpinner() {
            $('#spinner').show();
            console.log("show")
        }
        
        function hideSpinner() {
            $('#spinner').hide();
            console.log("hide")
        }
    </script>
}

</body>